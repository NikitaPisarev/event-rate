services:
  haproxy:
    image: haproxy:3.0
    container_name: haproxy
    ports:
      - "80:80"
      - "8084:8084"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - line-provider
      - score-maker
    networks:
      - app-network

  line-provider:
    build:
      context: ./src/line-provider
      dockerfile: ./Dockerfile
    container_name: line-provider
    env_file:
      - ./src/line-provider/.env
    depends_on:
      - mongo
      - kafka
    volumes:
      - ./src/line-provider:/app
    working_dir: /app
    expose:
      - "8000"
    networks:
      - app-network

  score-maker:
    build:
      context: ./src/score-maker
      dockerfile: ./Dockerfile
    container_name: score-maker
    env_file:
      - ./src/score-maker/.env
    depends_on:
      - db
      - kafka
    volumes:
      - ./src/score-maker:/app
    working_dir: /app
    expose:
      - "8001"
    networks:
      - app-network

  mongo:
    image: mongo:5.0
    container_name: mongo-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    expose:
      - "27017"
    networks:
      - app-network

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafkadata:/var/lib/kafka/data
    expose:
      - "9092"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeperdata:/var/lib/zookeeper/data
      - zookeeperlog:/var/log/zookeeper
    expose:
      - "2181"
    networks:
      - app-network

volumes:
  mongo_data:
  pgdata:
  kafkadata:
  zookeeperdata:
  zookeeperlog:


networks:
  app-network:
    driver: bridge
